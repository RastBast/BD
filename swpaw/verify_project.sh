#!/bin/bash

# üß™ –ü–û–õ–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–û–°–¢–ò VERB EXTRACTOR
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞

set -e

GREEN="\033[0;32m"
BLUE="\033[0;34m"
YELLOW="\033[1;33m"
RED="\033[0;31m"
NC="\033[0m" # No Color

echo -e "${GREEN}üîç –ü–†–û–í–ï–†–ö–ê –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–û–°–¢–ò VERB EXTRACTOR${NC}"
echo "================================================================"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
check_step() {
    local step_name="$1"
    local command="$2"
    local expected="$3"

    echo -e "\n${BLUE}‚û§ $step_name${NC}"
    echo "–ö–æ–º–∞–Ω–¥–∞: $command"

    if eval "$command"; then
        echo -e "${GREEN}‚úÖ $step_name - –£–°–ü–ï–®–ù–û${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $step_name - –ù–ï–£–î–ê–ß–ù–û${NC}"
        if [ -n "$expected" ]; then
            echo "–û–∂–∏–¥–∞–ª–æ—Å—å: $expected"
        fi
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
echo -e "\n${YELLOW}üìÅ –®–ê–ì 1: –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í${NC}"
echo "----------------------------------------"

check_step "–û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä" "test -f verb_extractor_server.go"
check_step "Go –º–æ–¥—É–ª—å" "test -f go.mod" 
check_step "Makefile" "test -f Makefile"
check_step "–ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∏–º–µ—Ä—ã (Bash)" "test -f simple_examples.sh"
check_step "–ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∏–º–µ—Ä—ã (Go)" "test -f simple_examples.go"
check_step "–ù–∞–≥—Ä—É–∑–æ—á–Ω—ã–µ —Ç–µ—Å—Ç—ã (Bash)" "test -f simple_load_test.sh"
check_step "–ù–∞–≥—Ä—É–∑–æ—á–Ω—ã–µ —Ç–µ—Å—Ç—ã (Go)" "test -f simple_load_test.go"
check_step "–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ì–ü–ú–†–ú" "test -f hpmor_sample.txt"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Go
echo -e "\n${YELLOW}üîß –®–ê–≥ 2: –ü–†–û–í–ï–†–ö–ê –°–ò–ù–¢–ê–ö–°–ò–°–ê GO${NC}"
echo "----------------------------------------"

check_step "–°–∏–Ω—Ç–∞–∫—Å–∏—Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞" "go build -o /tmp/verb-test verb_extractor_server.go && rm -f /tmp/verb-test"
check_step "–°–∏–Ω—Ç–∞–∫—Å–∏—Å –ø—Ä–æ—Å—Ç—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤" "go build -o /tmp/examples-test simple_examples.go && rm -f /tmp/examples-test"
check_step "–°–∏–Ω—Ç–∞–∫—Å–∏—Å –Ω–∞–≥—Ä—É–∑–æ—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤" "go build -o /tmp/load-test simple_load_test.go && rm -f /tmp/load-test"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∫—Ä–∏–ø—Ç–∞–º
echo -e "\n${YELLOW}üìã –®–ê–ì 3: –ü–†–û–í–ï–†–ö–ê –ü–†–ê–í –î–û–°–¢–£–ü–ê${NC}"
echo "----------------------------------------"

chmod +x simple_examples.sh simple_load_test.sh test_api.sh 2>/dev/null || true

check_step "–ü—Ä–∞–≤–∞ –Ω–∞ simple_examples.sh" "test -x simple_examples.sh"
check_step "–ü—Ä–∞–≤–∞ –Ω–∞ simple_load_test.sh" "test -x simple_load_test.sh"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo -e "\n${YELLOW}üõ†Ô∏è –®–ê–ì 4: –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô${NC}"
echo "----------------------------------------"

check_step "Go —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "go version"
check_step "curl –¥–æ—Å—Ç—É–ø–µ–Ω" "curl --version | head -n1"

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo -e "${BLUE}–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:${NC}"
if command -v jq >/dev/null 2>&1; then
    echo -e "‚úÖ jq —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ JSON)"
else
    echo -e "‚ö†Ô∏è  jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (JSON –±—É–¥–µ—Ç –≤ —Å—ã—Ä–æ–º –≤–∏–¥–µ)"
fi

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ–Ω–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
echo -e "\n${YELLOW}üöÄ –®–ê–ì 5: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ï–†–í–ï–†–ê${NC}"
echo "----------------------------------------"

echo "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ..."
go run verb_extractor_server.go &
SERVER_PID=$!

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
echo "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (5 —Å–µ–∫—É–Ω–¥)..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞
API_URL="http://localhost:8080"

if curl -s "$API_URL/api/health" >/dev/null; then
    echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints
    echo -e "\n${BLUE}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints:${NC}"

    # Health check
    if curl -s "$API_URL/api/health" | grep -q "ok"; then
        echo -e "‚úÖ Health check —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo -e "‚ùå Health check –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi

    # Metrics
    if curl -s "$API_URL/api/metrics" >/dev/null; then
        echo -e "‚úÖ Metrics endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo -e "‚ùå Metrics endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi

    # –û—Å–Ω–æ–≤–Ω–æ–π API
    echo -e "\n${BLUE}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –≥–ª–∞–≥–æ–ª–æ–≤:${NC}"

    api_response=$(curl -s -X POST "$API_URL/api/extract-verbs" \
        -H "Content-Type: application/json" \
        -d '{"text":"–Ø —á–∏—Ç–∞—é –∫–Ω–∏–≥—É –∏ –¥—É–º–∞—é –æ –∂–∏–∑–Ω–∏"}')

    if echo "$api_response" | grep -q "verbs"; then
        echo -e "‚úÖ API –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –≥–ª–∞–≥–æ–ª–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        echo "–û—Ç–≤–µ—Ç: $api_response"
    else
        echo -e "‚ùå API –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –≥–ª–∞–≥–æ–ª–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        echo "–û—Ç–≤–µ—Ç: $api_response"
    fi

    # –¢–µ—Å—Ç –ø—Ä–æ–±–ª–µ–º—ã –∏–∑ –∑–∞–¥–∞–Ω–∏—è
    echo -e "\n${BLUE}–¢–µ—Å—Ç –ø—Ä–æ–±–ª–µ–º—ã –∏–∑ –∑–∞–¥–∞–Ω–∏—è (—É–¥–∞—Ä–∏–ª/—É–¥–∞—Ä–∏—Ç—å/—É–¥–∞—Ä—è—é):${NC}"

    problem_response=$(curl -s -X POST "$API_URL/api/extract-verbs" \
        -H "Content-Type: application/json" \
        -d '{"text":"–û–Ω —É–¥–∞—Ä–∏–ª –º—è—á. –ù—É–∂–Ω–æ —É–¥–∞—Ä–∏—Ç—å —Ç–æ—á–Ω–æ. –Ø —É–¥–∞—Ä—è—é –ø–æ —Ü–µ–ª–∏."}')

    if echo "$problem_response" | grep -q "—É–¥–∞—Ä–∏—Ç—å"; then
        echo -e "‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ –∏–∑ –∑–∞–¥–∞–Ω–∏—è —Ä–µ—à–µ–Ω–∞ - —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º—ã –ø—Ä–∏–≤–æ–¥—è—Ç—Å—è –∫ –æ–¥–Ω–æ–π –ª–µ–º–º–µ"
        echo "–û—Ç–≤–µ—Ç: $problem_response"
    else
        echo -e "‚ö†Ô∏è  –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–µ–º–º–∞—Ç–∏–∑–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é"
        echo "–û—Ç–≤–µ—Ç: $problem_response"
    fi

else
    echo -e "${RED}‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    SERVER_FAILED=true
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä
echo -e "\n${BLUE}–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...${NC}"
kill $SERVER_PID 2>/dev/null || true
sleep 2

if [ -z "$SERVER_FAILED" ]; then
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–ª)
    echo -e "\n${YELLOW}üß™ –®–ê–ì 6: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ö–†–ò–ü–¢–û–í${NC}"
    echo "----------------------------------------"

    echo -e "${BLUE}–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤:${NC}"
    echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: go run verb_extractor_server.go"
    echo "2. –í –¥—Ä—É–≥–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
    echo "   ‚Ä¢ ./simple_examples.sh"
    echo "   ‚Ä¢ ./simple_load_test.sh" 
    echo "   ‚Ä¢ go run simple_examples.go"
    echo "   ‚Ä¢ go run simple_load_test.go"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Makefile –∫–æ–º–∞–Ω–¥
echo -e "\n${YELLOW}üìã –®–ê–ì 7: –ü–†–û–í–ï–†–ö–ê MAKEFILE${NC}"
echo "----------------------------------------"

check_step "Makefile help" "make help | head -n5"
check_step "Makefile —Å–∏–Ω—Ç–∞–∫—Å–∏—Å" "make -n build >/dev/null"

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
echo -e "\n================================================================"
echo -e "${GREEN}üéâ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê${NC}"
echo "================================================================"

echo -e "\n${YELLOW}üìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ó–ê–ü–£–°–ö–£:${NC}"
echo "----------------------------------------"

echo -e "\n${BLUE}1. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞:${NC}"
echo "   go run verb_extractor_server.go"
echo "   # –∏–ª–∏"
echo "   make run"

echo -e "\n${BLUE}2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–≤ –¥—Ä—É–≥–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ):${NC}"
echo "   –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∏–º–µ—Ä—ã:"
echo "   ‚Ä¢ ./simple_examples.sh          # Bash –≤–µ—Ä—Å–∏—è"
echo "   ‚Ä¢ go run simple_examples.go     # Go –≤–µ—Ä—Å–∏—è"
echo "   ‚Ä¢ make examples                 # –ß–µ—Ä–µ–∑ Makefile"

echo -e "\n   –ù–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
echo "   ‚Ä¢ ./simple_load_test.sh         # Bash –≤–µ—Ä—Å–∏—è"
echo "   ‚Ä¢ go run simple_load_test.go    # Go –≤–µ—Ä—Å–∏—è" 
echo "   ‚Ä¢ make load-test                # –ß–µ—Ä–µ–∑ Makefile"

echo -e "\n   –í—Å–µ —Ç–µ—Å—Ç—ã —Å—Ä–∞–∑—É:"
echo "   ‚Ä¢ make test-all                 # –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
echo "   ‚Ä¢ make demo                     # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è"

echo -e "\n${BLUE}3. –†—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API:${NC}"
echo "   curl -X POST http://localhost:8080/api/extract-verbs \\"
echo "        -H 'Content-Type: application/json' \\"
echo "        -d '{"text":"–Ø –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É—é –Ω–∞ Go –∏ —Å–æ–∑–¥–∞—é —Å–µ—Ä–≤–∏—Å—ã"}'"

echo -e "\n${GREEN}‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã
if [ -n "$SERVER_FAILED" ]; then
    echo -e "\n${RED}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï:${NC}"
    echo "–°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
    echo "‚Ä¢ –ü–æ—Ä—Ç 8080 —É–∂–µ –∑–∞–Ω—è—Ç"
    echo "‚Ä¢ –û—à–∏–±–∫–∞ –≤ –∫–æ–¥–µ —Å–µ—Ä–≤–µ—Ä–∞"
    echo "‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–ø—É—Å–∫ –≤—Ä—É—á–Ω—É—é: go run verb_extractor_server.go"
fi

echo -e "\n${BLUE}üí° –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:${NC}"
echo "   make help"
echo "   make usage"
